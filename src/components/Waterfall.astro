---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "../content/image/*.{png,jpg,jpeg,webp}",
  { eager: true }
);
const imageEntries = Object.values(images).map((image) => image.default);
---

<div class="waterfall" id="waterfall">
    {imageEntries.map((image) => (
        <div class="item">
            <Image
                src={image}
                alt="Gallery"
                widths={[200, 400, 600]}
                sizes="(max-width: 480px) 90vw, (max-width: 768px) 45vw, 30vw"
                loading="lazy"
                format="webp"
            />
        </div>
    ))}
</div>

<style>
    .waterfall {
        padding: 10px;
        position: relative;
    }

    .item {
        width: 100%;
        margin-bottom: 15px;
        break-inside: avoid;
    }

    @media (max-width: 480px) {
        .waterfall {
            margin: 0 10px;
            column-count: 2 !important;
            column-gap: 10px;
        }
        .item {
            margin-bottom: 10px;
        }
    }

    @media (min-width: 481px) and (max-width: 768px) {
        .waterfall {
            margin: 0 15px;
            column-count: 2;
            column-gap: 15px;
        }
    }

    @media (min-width: 769px) {
        .waterfall {
            margin: 0 40px;
            column-count: 4;
            column-gap: 20px;
        }
    }
</style>

<script is:inline>
    import Masonry from 'masonry-layout';
    import imagesLoaded from 'imagesloaded';

    const initMasonry = () => {
        const elem = document.querySelector('#waterfall');
        if (!elem) return;

        const columnWidth = window.innerWidth < 768 ? 150 : 200;
        
        const msnry = new Masonry(elem, {
            itemSelector: '.item',
            columnWidth: columnWidth,
            gutter: window.innerWidth < 480 ? 10 : 20,
            percentPosition: true
        });

        imagesLoaded(elem).on('done', () => msnry.layout());
    };

    let resizeTimer;
    window.addEventListener('resize', () => {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(() => {
            initMasonry();
            document.body.clientWidth;
        }, 100);
    });

    document.addEventListener('DOMContentLoaded', initMasonry);
    window.addEventListener('load', initMasonry);
</script>